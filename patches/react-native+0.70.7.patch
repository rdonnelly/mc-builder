diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
index 5831d51..ff4c682 100644
--- a/node_modules/react-native/react.gradle
+++ b/node_modules/react-native/react.gradle
@@ -15,14 +15,14 @@ def detectEntryFile(config) {
         return System.getenv('ENTRY_FILE')
     } else if (config.entryFile) {
         return config.entryFile
-    } else if ((new File("${projectDir}/../../index.android.js")).exists()) {
+    } else if ((new File("${projectDir}/../../../../index.android.js")).exists()) {
         return "index.android.js"
     }
 
     return "index.js";
 }
 
-def composeSourceMapsPath = config.composeSourceMapsPath ?: "node_modules/react-native/scripts/compose-source-maps.js"
+def composeSourceMapsPath = config.composeSourceMapsPath ?: "../../node_modules/react-native/scripts/compose-source-maps.js"
 def bundleAssetName = config.bundleAssetName ?: "index.android.bundle"
 def entryFile = detectEntryFile(config)
 def bundleCommand = config.bundleCommand ?: "bundle"
@@ -59,14 +59,14 @@ def detectCliPath(config, reactRoot) {
     }
 
     // 3. cli.js in the root folder
-    def rootCliJs = new File(reactRoot, "node_modules/react-native/cli.js")
+    def rootCliJs = new File(reactRoot, "../../node_modules/react-native/cli.js")
     if (rootCliJs.exists()) {
         return rootCliJs.getAbsolutePath()
     }
 
     throw new Exception("Couldn't determine CLI location. " +
              "Please set `project.ext.react.cliPath` to the path of the react-native cli.js file. " +
-             "This file typically resides in `node_modules/react-native/cli.js`");
+             "This file typically resides in `../../node_modules/react-native/cli.js`");
 }
 
 def reactNativeDevServerPort() {
@@ -110,14 +110,14 @@ def getHermesCommand = {
     def hermesOverrideDir = System.getenv("REACT_NATIVE_OVERRIDE_HERMES_DIR")
     def builtHermesc = hermesOverrideDir ?
         new File(hermesOverrideDir, "build/bin/$hermescBin") :
-        new File(reactRoot, "node_modules/react-native/ReactAndroid/hermes-engine/build/hermes/bin/$hermescBin")
+        new File(reactRoot, "../../node_modules/react-native/ReactAndroid/hermes-engine/build/hermes/bin/$hermescBin")
 
     if (builtHermesc.exists()) {
         return builtHermesc.getAbsolutePath()
     }
 
     // 3. If the react-native contains a pre-built hermesc, use it.
-    def prebuiltHermesPath = "node_modules/react-native/sdks/hermesc/%OS-BIN%/$hermescBin"
+    def prebuiltHermesPath = "../../node_modules/react-native/sdks/hermesc/%OS-BIN%/$hermescBin"
         .replaceAll("%OS-BIN%", getHermesOSBin())
         .replace('/' as char, File.separatorChar);
     def prebuiltHermes = new File(reactRoot, prebuiltHermesPath)
@@ -127,7 +127,7 @@ def getHermesCommand = {
 
     throw new Exception("Couldn't determine Hermesc location. " +
         "Please set `project.ext.react.hermesCommand` to the path of the hermesc binary file. " +
-        "node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc");
+        "../../node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc");
 }
 
 // Set enableHermesForVariant to a function to configure per variant,
diff --git a/node_modules/react-native/scripts/react-native-xcode.sh b/node_modules/react-native/scripts/react-native-xcode.sh
index 7fb2a3d..1484e4b 100755
--- a/node_modules/react-native/scripts/react-native-xcode.sh
+++ b/node_modules/react-native/scripts/react-native-xcode.sh
@@ -60,7 +60,7 @@ esac
 REACT_NATIVE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
 # The project should be located next to where react-native is installed
 # in node_modules.
-PROJECT_ROOT=${PROJECT_ROOT:-"$REACT_NATIVE_DIR/../.."}
+PROJECT_ROOT=${PROJECT_ROOT:-"$REACT_NATIVE_DIR/../../packages/mobile"}
 
 cd "$PROJECT_ROOT" || exit
 
